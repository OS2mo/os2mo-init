# Generated by ariadne-codegen on 2024-08-12 15:35
# Source: queries.graphql

from typing import List
from typing import Optional

from .base_model import BaseModel


class TestingGetClass(BaseModel):
    classes: "TestingGetClassClasses"


class TestingGetClassClasses(BaseModel):
    objects: List["TestingGetClassClassesObjects"]


class TestingGetClassClassesObjects(BaseModel):
    current: Optional["TestingGetClassClassesObjectsCurrent"]


class TestingGetClassClassesObjectsCurrent(BaseModel):
    facet: "TestingGetClassClassesObjectsCurrentFacet"
    user_key: str
    name: str
    scope: Optional[str]
    it_system: Optional["TestingGetClassClassesObjectsCurrentItSystem"]


class TestingGetClassClassesObjectsCurrentFacet(BaseModel):
    user_key: str


class TestingGetClassClassesObjectsCurrentItSystem(BaseModel):
    user_key: str


TestingGetClass.update_forward_refs()
TestingGetClassClasses.update_forward_refs()
TestingGetClassClassesObjects.update_forward_refs()
TestingGetClassClassesObjectsCurrent.update_forward_refs()
TestingGetClassClassesObjectsCurrentFacet.update_forward_refs()
TestingGetClassClassesObjectsCurrentItSystem.update_forward_refs()
