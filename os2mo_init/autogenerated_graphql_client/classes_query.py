# Generated by ariadne-codegen on 2024-08-12 15:35
# Source: queries.graphql

from typing import List
from typing import Optional
from uuid import UUID

from .base_model import BaseModel


class ClassesQuery(BaseModel):
    facets: "ClassesQueryFacets"


class ClassesQueryFacets(BaseModel):
    objects: List["ClassesQueryFacetsObjects"]


class ClassesQueryFacetsObjects(BaseModel):
    current: Optional["ClassesQueryFacetsObjectsCurrent"]


class ClassesQueryFacetsObjectsCurrent(BaseModel):
    uuid: UUID
    user_key: str
    classes: List["ClassesQueryFacetsObjectsCurrentClasses"]


class ClassesQueryFacetsObjectsCurrentClasses(BaseModel):
    uuid: UUID
    user_key: str
    name: str
    scope: Optional[str]
    it_system: Optional["ClassesQueryFacetsObjectsCurrentClassesItSystem"]


class ClassesQueryFacetsObjectsCurrentClassesItSystem(BaseModel):
    uuid: UUID


ClassesQuery.update_forward_refs()
ClassesQueryFacets.update_forward_refs()
ClassesQueryFacetsObjects.update_forward_refs()
ClassesQueryFacetsObjectsCurrent.update_forward_refs()
ClassesQueryFacetsObjectsCurrentClasses.update_forward_refs()
ClassesQueryFacetsObjectsCurrentClassesItSystem.update_forward_refs()
