# Generated by ariadne-codegen on 2024-08-13 19:15
# Source: queries.graphql

from typing import List
from typing import Optional
from uuid import UUID

from .base_model import BaseModel


class GetClass(BaseModel):
    classes: "GetClassClasses"


class GetClassClasses(BaseModel):
    objects: List["GetClassClassesObjects"]


class GetClassClassesObjects(BaseModel):
    current: Optional["GetClassClassesObjectsCurrent"]


class GetClassClassesObjectsCurrent(BaseModel):
    facet: "GetClassClassesObjectsCurrentFacet"
    uuid: UUID
    user_key: str
    name: str
    scope: Optional[str]
    it_system: Optional["GetClassClassesObjectsCurrentItSystem"]


class GetClassClassesObjectsCurrentFacet(BaseModel):
    user_key: str


class GetClassClassesObjectsCurrentItSystem(BaseModel):
    uuid: UUID
    user_key: str


GetClass.update_forward_refs()
GetClassClasses.update_forward_refs()
GetClassClassesObjects.update_forward_refs()
GetClassClassesObjectsCurrent.update_forward_refs()
GetClassClassesObjectsCurrentFacet.update_forward_refs()
GetClassClassesObjectsCurrentItSystem.update_forward_refs()
