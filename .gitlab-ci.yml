# SPDX-FileCopyrightText: 2021 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

# For `docker push` to work, the following environment variables have to set in
# the Gitlab UI:
# RELEASE_REGISTRY_USER
# RELEASE_REGISTRY_PASSWORD

variables:
  RELEASE_REGISTRY: docker.io
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/os2mo-init

  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}

  IMAGE_DEV: ${RELEASE_REGISTRY_IMAGE}:dev
  IMAGE_VERSION: ${RELEASE_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  IMAGE_LATEST: ${RELEASE_REGISTRY_IMAGE}:latest

  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"


stages:
  - lint
  - test
  - build
  - prepare-release
  - release

# ---------------------------------------------------------------------------
# Templates
# ---------------------------------------------------------------------------
include:
  - project: rammearkitektur/gitlab-ci-templates
    file: templates/poetry-precommit.yml
  - project: rammearkitektur/gitlab-ci-templates
    file: templates/lint-docker.yml


# ---------------------------------------------------------------------------
# Lint
# ---------------------------------------------------------------------------
Lint Python:
  extends: .lint-python
  stage: lint
  script:
    - poetry run pre-commit run --all-files


# ---------------------------------------------------------------------------
# Test
# ---------------------------------------------------------------------------
.test-template: &test
  extends: .test-python
  stage: test
  needs: []

Test on Python 3.9:
  <<: *test
  image: python:3.9

Test on Python 3.10:
  <<: *test
  image: python:3.10


# ---------------------------------------------------------------------------
# Build
# ---------------------------------------------------------------------------
Build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/Dockerfile
      --destination=$IMAGE_SHA


# ---------------------------------------------------------------------------
# Prepare Release
# ---------------------------------------------------------------------------
Autopub:
  stage: prepare-release
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
  image: python:3.9
  variables:
    PROJECT_ROOT: .
  before_script:
    # Setup git
    - mkdir -p ~/.ssh
    - cat .gitlab/gitlab-known-hosts >> ~/.ssh/known_hosts
    - git clone https://$AUTOPUB_USER:$AUTOPUB_TOKEN@git.magenta.dk/rammearkitektur/os2mo-init.git
    - cd ra-data-models
    - git checkout master
    - git config --global user.name "MagentaBot"
    - git config --global user.email "info@magenta.dk"
    # Prepare autopub
    - pip install autopub
    - pip install poetry
    - pip install toml
  script:
    - bash .gitlab/autopub.sh


# ---------------------------------------------------------------------------
# Release
# ---------------------------------------------------------------------------
.release-version-template: &release-version
  stage: release
  needs:
    - Build
  rules:
    # Matches <version core> from SemVer 2.0.0 BNF grammar. Ex. 2.3.4, but not 2.3.4-rc
    - if: $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/

Release version to Docker registry:
  <<: *release-version
  image: alpine
  before_script:
    - apk add skopeo
  script:
    - skopeo copy
      --src-creds=${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds=${RELEASE_REGISTRY_USER}:${RELEASE_REGISTRY_PASSWORD}
      "docker://${IMAGE_SHA}"
      "docker://${IMAGE_VERSION}"
    - skopeo copy
      --src-creds=${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds=${RELEASE_REGISTRY_USER}:${RELEASE_REGISTRY_PASSWORD}
      "docker://${IMAGE_SHA}"
      "docker://${IMAGE_LATEST}"
